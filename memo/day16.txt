동기화(Synchronized)
	하나의 쓰레드가 자원에 접근 중일 때 다른 쓰레드가 동시에 같은 자원을
	접근하지 못하게 막는 것. 즉, 자원 공유 문제를 해결할 수 있다.

- synchronized(mutex){ ... }
	동기화 블럭이라고 부르며, 일부 소스코드만 동기화를 걸어준다.

- synchronized
	영역 전체에 동기화를 걸어주며, 메소드 리턴 타입 앞에 작성하면
	해당 메소드 전체에 동기화가 걸린다.

Thread 종료 방법
1. 필드에 boolean 타입의 변수를 선언하고 run() 안에 있는 반복문에 해당 변수가 true일 경우 break하도록 설계
2. sleep() 또는 wait(), join() 등의 메소드를 통해 쓰레드 일시정지 상태일 경우
   Thread객체.interrupt()를 사용하여 InterruptedException을 발생시킨다.
   이 때 일시정지를 시킨 메소드부분의 catch를 통해 예외를 잡아주고 원하는 문장을 작성하면 된다. 
3. 쓰레드를 일시정지 하는 코드가 없을 경우 Thread.interrupted()의 상태를 확인한다.
   Thread객체.interrupt()사용 시 Thread.interrupted()의 상태는 true로 변경되고,
   만약 Thread.interrupted()를 두 번 사용하면 두번째부터는 false상태로 리턴된다.
4. System.exit(0)를 사용하면 전체 쓰레드 종료
=============================================================================================












