예외 처리
	에러 : 심각한 오류
	예외 : 덜 심각한 오류

예외 처리 문법
	try{
		오류가 발생할 수 있는 문장

	}catch(예외이름 객체명){
		오류 발생 시 실행할 문장
	}catch(예외이름 객체명){
		오류 발생 시 실행할 문장
	}
	...
	}finally{
		오류 발생 여부에 상관없이 무조건 실행할 문장
		※외부 장치와 연결했을 경우 다시 닫을 때 주로 사용된다.
	}

예외 처리를 사용하는 이유
 - 제어문으로는 처리할 수 없는 경우
 - 프로그램이 강제종료되는 것을 막기 위함(튕김 방지)
========================================================================
API(Application Programming Interface)
	개발에 필요한 라이브러리들의 집합

- 내부 API
	JDK 설치 시 제공해주는 기본 API
	docs.oracle.com/javase

- 외부 API
	선배 개발자들이 개발한 패키지 및 클래스들을 의미한다.
	보통 JAR파일로 배포하며 자바 프로젝트에 build path에 추가하여 사용할 수 있다.

- 외부 API Build Path에 추가
	배포된 JAR파일 다운 받기
	> 프로젝트 우클릭 > Build Path > Configure Build Path
	> Libraries 탭 클릭 > Add External JARs 클릭
	> 저장된 경로의 .jar파일 더블 클릭으로 추가 > Apply 클릭
	> Orders and Exports 탭 클릭
	> Select All 클릭 > Apply and Close 클릭

API 주석(어노테이션 주석)
/**
	@
*/
----------------------------------------------------------------------------
Object 클래스
	1. toString()
		항상 객체명을 출력할 때에는 toString()이 생략되어 있다.
		toString()을 통해 출력되는 문자열이 마음에 들지 않는다면, 재정의하여 수정하도록 한다.
	2. equals() : 주소값 비교(==)
		※ String 클래스에서 값 비교로 재정의 되었다.
	3.


















